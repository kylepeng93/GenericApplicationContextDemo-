spring.main.banner-mode=off
#logging.level.root=INFO
#logging.pattern.console=%d{yyyy-MM-dd HH:mm:ss} %magenta([%thread]) %highlight(%-5level) %logger.%M - %msg%n

server.port=8888
server.name=myApp

spring.datasource.druid.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.druid.url=jdbc:mysql://127.0.0.1:3306/default
spring.datasource.druid.username=root
spring.datasource.druid.password=devstack

# 配置durid连接池
# 初始化连接池连接数
spring.datasource.druid.initialSize=10
# 最小空闲连接数
spring.datasource.druid.minIdle=5
# 最大活动连接数
spring.datasource.druid.maxActive=50
# 最大超时等待时间，单位为毫秒
spring.datasource.druid.maxWait=60000
# 多久检测一次需要被关闭的空闲连接，单位为毫秒
spring.datasource.druid.timeBetweenEvictionRunsMillis=60000
# 连接的最小生存时间，单位为毫秒
spring.datasource.druid.minEvictableIdleTimeMillis=300000
# 验证数据库连接是否有效
spring.datasource.druid.validationQuery=SELECT 1
# 空闲时是否验证连接有效性
spring.datasource.druid.testWhileIdle=true
# 连接从连接池被借出时是否执行有效性检测，如果执行检测，且检测失败，该连接将会被删除，然后去借另外一个
spring.datasource.druid.testOnBorrow=false
# 连接在被还给连接池时是否执行有效性检测
spring.datasource.druid.testOnReturn=false
# 连接池是否对sql进行预处理
spring.datasource.druid.poolPreparedStatements=true

# redis配置
spring.redis.host=127.0.0.1:6379
spring.redis.timeout=6000
spring.redis.password=123456
# 连接池最大连接数（使用负值表示没有限制）
spring.redis.jedis.pool.max-active=1000
# 连接池最大阻塞等待时间（使用负值表示没有限制）
spring.redis.jedis.pool.max-wait=-1
# 连接池中的最大空闲连接
spring.redis.jedis.pool.max-idle=10
# 连接池中的最小空闲连接
spring.redis.jedis.pool.min-idle=5